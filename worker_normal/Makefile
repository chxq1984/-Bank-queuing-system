#############################################################################
# Makefile for building: Employee
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sun Jul 14 20:04:54 2019
# Project:  Employee.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile Employee.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_PHONON_LIB -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4/phonon -I/usr/include/qt4 -I/usr/include/qt4/phonon_compat -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lphonon -lQtSql -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		manager.cpp \
		employee.cpp \
		change.cpp \
		dialog1.cpp \
		dialog2.cpp \
		dialog3.cpp \
		give_right.cpp \
		vs.cpp moc_mainwindow.cpp \
		moc_manager.cpp \
		moc_employee.cpp \
		moc_change.cpp \
		moc_dialog1.cpp \
		moc_dialog2.cpp \
		moc_dialog3.cpp \
		moc_give_right.cpp \
		moc_vs.cpp \
		qrc_t1.cpp \
		qrc_t2.cpp \
		qrc_lufei.cpp \
		qrc_s3.cpp \
		qrc_s1.cpp \
		qrc_lu.cpp \
		qrc_s8.cpp \
		qrc_s6.cpp \
		qrc_s5.cpp
OBJECTS       = main.o \
		mainwindow.o \
		manager.o \
		employee.o \
		change.o \
		dialog1.o \
		dialog2.o \
		dialog3.o \
		give_right.o \
		vs.o \
		moc_mainwindow.o \
		moc_manager.o \
		moc_employee.o \
		moc_change.o \
		moc_dialog1.o \
		moc_dialog2.o \
		moc_dialog3.o \
		moc_give_right.o \
		moc_vs.o \
		qrc_t1.o \
		qrc_t2.o \
		qrc_lufei.o \
		qrc_s3.o \
		qrc_s1.o \
		qrc_lu.o \
		qrc_s8.o \
		qrc_s6.o \
		qrc_s5.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Employee.pro
QMAKE_TARGET  = Employee
DESTDIR       = 
TARGET        = Employee

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_manager.h ui_employee.h ui_change.h ui_dialog1.h ui_dialog2.h ui_dialog3.h ui_mainwindow.h ui_give_right.h ui_vs.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Employee.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libphonon.prl \
		/usr/lib/libQtSql.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile Employee.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libphonon.prl:
/usr/lib/libQtSql.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile Employee.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Employee1.0.0 || $(MKDIR) .tmp/Employee1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Employee1.0.0/ && $(COPY_FILE) --parents mainwindow.h manager.h employee.h change.h dialog1.h dialog2.h dialog3.h give_right.h vs.h .tmp/Employee1.0.0/ && $(COPY_FILE) --parents t1.qrc t2.qrc lufei.qrc s3.qrc s1.qrc lu.qrc s8.qrc s6.qrc s5.qrc .tmp/Employee1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp manager.cpp employee.cpp change.cpp dialog1.cpp dialog2.cpp dialog3.cpp give_right.cpp vs.cpp .tmp/Employee1.0.0/ && $(COPY_FILE) --parents manager.ui employee.ui change.ui dialog1.ui dialog2.ui dialog3.ui mainwindow.ui give_right.ui vs.ui .tmp/Employee1.0.0/ && (cd `dirname .tmp/Employee1.0.0` && $(TAR) Employee1.0.0.tar Employee1.0.0 && $(COMPRESS) Employee1.0.0.tar) && $(MOVE) `dirname .tmp/Employee1.0.0`/Employee1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Employee1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_manager.cpp moc_employee.cpp moc_change.cpp moc_dialog1.cpp moc_dialog2.cpp moc_dialog3.cpp moc_give_right.cpp moc_vs.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_manager.cpp moc_employee.cpp moc_change.cpp moc_dialog1.cpp moc_dialog2.cpp moc_dialog3.cpp moc_give_right.cpp moc_vs.cpp
moc_mainwindow.cpp: mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_manager.cpp: manager.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) manager.h -o moc_manager.cpp

moc_employee.cpp: employee.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) employee.h -o moc_employee.cpp

moc_change.cpp: change.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) change.h -o moc_change.cpp

moc_dialog1.cpp: dialog1.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dialog1.h -o moc_dialog1.cpp

moc_dialog2.cpp: dialog2.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dialog2.h -o moc_dialog2.cpp

moc_dialog3.cpp: dialog3.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dialog3.h -o moc_dialog3.cpp

moc_give_right.cpp: give_right.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) give_right.h -o moc_give_right.cpp

moc_vs.cpp: vs.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) vs.h -o moc_vs.cpp

compiler_rcc_make_all: qrc_t1.cpp qrc_t2.cpp qrc_lufei.cpp qrc_s3.cpp qrc_s1.cpp qrc_lu.cpp qrc_s8.cpp qrc_s6.cpp qrc_s5.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_t1.cpp qrc_t2.cpp qrc_lufei.cpp qrc_s3.cpp qrc_s1.cpp qrc_lu.cpp qrc_s8.cpp qrc_s6.cpp qrc_s5.cpp
qrc_t1.cpp: t1.qrc \
		t3.jpg
	/usr/bin/rcc -name t1 t1.qrc -o qrc_t1.cpp

qrc_t2.cpp: t2.qrc \
		t4.jpg
	/usr/bin/rcc -name t2 t2.qrc -o qrc_t2.cpp

qrc_lufei.cpp: lufei.qrc \
		lufei.jpg
	/usr/bin/rcc -name lufei lufei.qrc -o qrc_lufei.cpp

qrc_s3.cpp: s3.qrc \
		s3.jpg
	/usr/bin/rcc -name s3 s3.qrc -o qrc_s3.cpp

qrc_s1.cpp: s1.qrc \
		s1.jpg
	/usr/bin/rcc -name s1 s1.qrc -o qrc_s1.cpp

qrc_lu.cpp: lu.qrc \
		lu.jpg
	/usr/bin/rcc -name lu lu.qrc -o qrc_lu.cpp

qrc_s8.cpp: s8.qrc \
		s8.jpg
	/usr/bin/rcc -name s8 s8.qrc -o qrc_s8.cpp

qrc_s6.cpp: s6.qrc \
		s6.jpg
	/usr/bin/rcc -name s6 s6.qrc -o qrc_s6.cpp

qrc_s5.cpp: s5.qrc \
		s5.jpg
	/usr/bin/rcc -name s5 s5.qrc -o qrc_s5.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_manager.h ui_employee.h ui_change.h ui_dialog1.h ui_dialog2.h ui_dialog3.h ui_mainwindow.h ui_give_right.h ui_vs.h
compiler_uic_clean:
	-$(DEL_FILE) ui_manager.h ui_employee.h ui_change.h ui_dialog1.h ui_dialog2.h ui_dialog3.h ui_mainwindow.h ui_give_right.h ui_vs.h
ui_manager.h: manager.ui
	/usr/bin/uic-qt4 manager.ui -o ui_manager.h

ui_employee.h: employee.ui
	/usr/bin/uic-qt4 employee.ui -o ui_employee.h

ui_change.h: change.ui
	/usr/bin/uic-qt4 change.ui -o ui_change.h

ui_dialog1.h: dialog1.ui
	/usr/bin/uic-qt4 dialog1.ui -o ui_dialog1.h

ui_dialog2.h: dialog2.ui
	/usr/bin/uic-qt4 dialog2.ui -o ui_dialog2.h

ui_dialog3.h: dialog3.ui
	/usr/bin/uic-qt4 dialog3.ui -o ui_dialog3.h

ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_give_right.h: give_right.ui
	/usr/bin/uic-qt4 give_right.ui -o ui_give_right.h

ui_vs.h: vs.ui
	/usr/bin/uic-qt4 vs.ui -o ui_vs.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		ui_mainwindow.h \
		change.h \
		employee.h \
		manager.h \
		dialog2.h \
		dialog3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

manager.o: manager.cpp manager.h \
		ui_manager.h \
		give_right.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o manager.o manager.cpp

employee.o: employee.cpp employee.h \
		ui_employee.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o employee.o employee.cpp

change.o: change.cpp change.h \
		ui_change.h \
		dialog1.h \
		dialog2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o change.o change.cpp

dialog1.o: dialog1.cpp dialog1.h \
		ui_dialog1.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dialog1.o dialog1.cpp

dialog2.o: dialog2.cpp dialog2.h \
		ui_dialog2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dialog2.o dialog2.cpp

dialog3.o: dialog3.cpp dialog3.h \
		ui_dialog3.h \
		dialog1.h \
		dialog2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dialog3.o dialog3.cpp

give_right.o: give_right.cpp give_right.h \
		ui_give_right.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o give_right.o give_right.cpp

vs.o: vs.cpp vs.h \
		ui_vs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vs.o vs.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_manager.o: moc_manager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_manager.o moc_manager.cpp

moc_employee.o: moc_employee.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_employee.o moc_employee.cpp

moc_change.o: moc_change.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_change.o moc_change.cpp

moc_dialog1.o: moc_dialog1.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dialog1.o moc_dialog1.cpp

moc_dialog2.o: moc_dialog2.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dialog2.o moc_dialog2.cpp

moc_dialog3.o: moc_dialog3.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dialog3.o moc_dialog3.cpp

moc_give_right.o: moc_give_right.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_give_right.o moc_give_right.cpp

moc_vs.o: moc_vs.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_vs.o moc_vs.cpp

qrc_t1.o: qrc_t1.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_t1.o qrc_t1.cpp

qrc_t2.o: qrc_t2.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_t2.o qrc_t2.cpp

qrc_lufei.o: qrc_lufei.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_lufei.o qrc_lufei.cpp

qrc_s3.o: qrc_s3.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_s3.o qrc_s3.cpp

qrc_s1.o: qrc_s1.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_s1.o qrc_s1.cpp

qrc_lu.o: qrc_lu.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_lu.o qrc_lu.cpp

qrc_s8.o: qrc_s8.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_s8.o qrc_s8.cpp

qrc_s6.o: qrc_s6.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_s6.o qrc_s6.cpp

qrc_s5.o: qrc_s5.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_s5.o qrc_s5.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

